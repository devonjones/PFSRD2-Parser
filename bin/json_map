#!/usr/bin/env python
import sys
import os
import json
from pprint import pprint
from optparse import OptionParser

def run_map(map, data, file):
	for key in data.keys():
		value = data[key]
		type_name = type(value).__name__
		if not key in map.keys():
			sys.stderr.write(file + "\n")
			map[key] = {
				'file': file,
				'type': type_name,
				'children': {}
			}
		if type_name == 'dict':
			run_map(map[key]['children'], value, file)
		elif type_name == 'list':
			for item in value:
				if type(item).__name__ == 'dict':
					run_map(map[key]['children'], item, file)

def map_file(map, file):
	with open(file) as f:
		data = json.load(f)
		run_map(map, data, file)

def map_files(files):
	map = {}
	files.sort()
	for file in files:
		map_file(map, file)
	print(json.dumps(map, indent=2))

def get_files(args):
	file_names = []
	for arg in args:
		abspath = os.path.abspath(arg)
		for root, dirs, files in os.walk(abspath, topdown=False):
			for file in files:
				if file.endswith(".json"):
					file_names.append(os.path.join(root, file))
	return file_names

def option_parser(usage):
	parser = OptionParser(usage=usage)
	return parser

def main():
	parser = option_parser("")
	(options, args) = parser.parse_args()
	files = get_files(args)
	map_files(files)

if __name__ == "__main__":
	sys.exit(main())
